---
services: docker

branches:
  only:
    - master
    - /^test\/.*$/

env:
  - distro: ubuntu1604
    init: /lib/systemd/systemd
    run_opts: "--privileged --volume=/sys/fs/cgroup:/sys/fs/cgroup:ro"
  - distro: debian8
    init: /lib/systemd/systemd
    run_opts: "--privileged --volume=/sys/fs/cgroup:/sys/fs/cgroup:ro"

before_install:
  # Pull container.
  - 'docker pull geerlingguy/docker-${distro}-ansible:latest'

script:
  - container_id=$(mktemp)
  # Run container in detached state.
  - 'docker run --detach --volume="${PWD}":/etc/ansible/roles/role_under_test:ro ${run_opts} geerlingguy/docker-${distro}-ansible:latest "${init}" > "${container_id}"'

  # Install dependencies.
  - 'docker exec "$(cat ${container_id})" ansible-galaxy install -r /etc/ansible/roles/role_under_test/tests/requirements.yml'

  # Ansible syntax check.
  - 'docker exec --tty "$(cat ${container_id})" env TERM=xterm ansible-playbook /etc/ansible/roles/role_under_test/tests/test.yml --syntax-check'

  # Test role.
  - 'docker exec --tty "$(cat ${container_id})" env TERM=xterm ansible-playbook /etc/ansible/roles/role_under_test/tests/test.yml'

  # Test role idempotence.
  - idempotence=$(mktemp)
  - docker exec "$(cat ${container_id})" ansible-playbook /etc/ansible/roles/role_under_test/tests/test.yml | tee -a ${idempotence}
  - >
    tail ${idempotence}
    | grep -q 'changed=0.*failed=0'
    && (echo 'Idempotence test: pass' && exit 0)
    || (echo 'Idempotence test: fail' && exit 1)

  # Ensure the CACert CA is installed system-wide.
  - 'docker exec --tty "$(cat ${container_id})" env TERM=xterm certutil -L -d sql:/etc/pki/nssdb'

notifications:
  webhooks: https://galaxy.ansible.com/api/v1/notifications/
  slack:
    rooms:
      secure: KW6bLLPkT4vIKfEwlIBMAv/ygEYEch5EEyf+iN4TiYzo4/vxoSVAd8HAWPXMKQhQXtZnQiQD4Z6gyqxlcgai9krDEi30F7k0EL88sHXdXH4hZq8GbPM2kqjE1V0OZkkeNWe0DywCAkD0121croGpP9TpuEhOumIxqDwW6l/+tdodDkrdGB6/bv3XNvIrqTdPEvI9tZQX4fAiRuOwZf+kGLOLbZQ2XJgEEavblhIvxYH2JQ5c5fsUU8EILFtgQkvmB8EzVeDERfn60TcV98EWaRC3tcmpw2/kr8QQ4BF8CSXAe6BKDY7u7Fy1tVj/2ete9GyZsTNdsSrfKrlCsnq9M3vC7GO8ePv21YL+yUfwd3TL5rBtz5XCc2E8+DpE8/OuVpFcOprzMrehWWdK7iEIACll0Pe23t9zQCsJeIQNS6T42WEiqg6geoWBTfcy/sQtMXsm6U1A4WbeY42q3cwt8Hn1XglVYKqbGDgvDYDEr9RmJqNX4m6nlhe5scEpzy//te94yR1qlUoMATV3DlwdFNBnop3jVkUMZTWCQWCLa1bx3+iViKa39V+uGNXyw9bVyOTo9Wlk6qEsnu0n8nDuQJPIoEXaw9B5ad18WyB0J2sJ29imteLbTkerGpCAkbVMV8LP7wGmXmYEfeWeA1eWpQBaplBPUpTiE5Ol+cSAAdY=
    on_success: change
    on_failure: always
